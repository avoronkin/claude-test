(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))a(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();var T=(n=>(n.HUMAN_VS_HUMAN="human_vs_human",n.HUMAN_VS_AI="human_vs_ai",n))(T||{});class B extends Error{constructor(e){super(e),this.name="TicTacToeError"}}class E extends B{constructor(e){super(e),this.name="InvalidMoveError"}}class N extends B{constructor(e){super(e),this.name="GameCompletedError"}}class C{constructor(e,t,a,s,r,o){this._board=e||[[null,null,null],[null,null,null],[null,null,null]],this._currentPlayer=t||"X",this._gameStatus=a||"ongoing",this._winner=s||null,this._gameMode=r||"human_vs_human",this._humanPlayerSide=o||"X"}get board(){return this._board.map(e=>[...e])}get currentPlayer(){return this._currentPlayer}get gameStatus(){return this._gameStatus}get winner(){return this._winner}get gameMode(){return this._gameMode}get humanPlayerSide(){return this._humanPlayerSide}get isAITurn(){return this._gameMode==="human_vs_ai"&&this._currentPlayer!==this._humanPlayerSide}determineFirstPlayer(){return Math.random()<.5?"X":"O"}makeAIMove(){if(this._gameStatus!=="ongoing")throw new Error("Cannot make AI move on completed game");if(!this.isAITurn)throw new Error("Cannot make AI move when it is human player turn");const e=this.getBestMove();return this.makeMove(e.row,e.col)}makeMove(e,t){if(this._gameStatus!=="ongoing")throw new N("Cannot make a move on a completed game");if(e<0||e>2)throw new E("Row must be between 0 and 2");if(t<0||t>2)throw new E("Column must be between 0 and 2");if(this._board[e][t]!==null)throw new E(`Cell at position (${e}, ${t}) is already occupied`);const a=this._board.map(f=>[...f]);a[e][t]=this._currentPlayer;const s=this._currentPlayer==="X"?"O":"X",r=this.checkWinner(a),o=r?"won":this.isBoardFull(a)?"draw":"ongoing",l=r;return new C(a,s,o,l,this._gameMode,this._humanPlayerSide)}checkWinner(e){for(let t=0;t<3;t++)if(e[t][0]&&e[t][0]===e[t][1]&&e[t][1]===e[t][2])return e[t][0];for(let t=0;t<3;t++)if(e[0][t]&&e[0][t]===e[1][t]&&e[1][t]===e[2][t])return e[0][t];return e[0][0]&&e[0][0]===e[1][1]&&e[1][1]===e[2][2]?e[0][0]:e[0][2]&&e[0][2]===e[1][1]&&e[1][1]===e[2][0]?e[0][2]:null}isBoardFull(e){for(let t=0;t<3;t++)for(let a=0;a<3;a++)if(e[t][a]===null)return!1;return!0}getBestMove(){let e=-1/0,t={row:0,col:0};const a=this._humanPlayerSide==="X"?"O":"X";for(let s=0;s<3;s++)for(let r=0;r<3;r++)if(this._board[s][r]===null){const o=this._board.map(f=>[...f]);o[s][r]=a;const l=this.minimax(o,0,!1,-1/0,1/0);l>e&&(e=l,t={row:s,col:r})}return t}minimax(e,t,a,s,r){const o=this.checkWinner(e),l=this._humanPlayerSide==="X"?"O":"X",f=this._humanPlayerSide;if(o===l)return 10-t;if(o===f)return t-10;if(this.isBoardFull(e))return 0;if(a){let h=-1/0;for(let u=0;u<3;u++){for(let m=0;m<3;m++)if(e[u][m]===null){const y=e.map(k=>[...k]);y[u][m]=l;const w=this.minimax(y,t+1,!1,s,r);if(h=Math.max(w,h),s=Math.max(s,w),r<=s)break}if(r<=s)break}return h}else{let h=1/0;for(let u=0;u<3;u++){for(let m=0;m<3;m++)if(e[u][m]===null){const y=e.map(k=>[...k]);y[u][m]=f;const w=this.minimax(y,t+1,!0,s,r);if(h=Math.min(w,h),r=Math.min(r,w),r<=s)break}if(r<=s)break}return h}}}const d=document.getElementById("board"),c=document.querySelectorAll(".cell"),M=document.getElementById("player-indicator"),v=document.getElementById("game-message"),x=document.getElementById("new-game-btn"),W=document.querySelector(".game-result"),b=document.getElementById("result-title"),S=document.getElementById("result-message"),G=document.querySelectorAll('input[name="player-side"]'),X=document.getElementById("reset-stats-btn"),R=document.getElementById("stat-games-played"),D=document.getElementById("stat-human-wins"),F=document.getElementById("stat-ai-wins"),$=document.getElementById("stat-draws"),q=document.getElementById("stat-win-rate"),O=document.getElementById("thinking-indicator");class H{constructor(){this.storageKey="tic-tac-toe-ai-stats"}getStats(){try{const e=localStorage.getItem(this.storageKey);if(e){const t=JSON.parse(e);return t.winRate=t.gamesPlayed>0?t.humanWins/t.gamesPlayed*100:0,t}}catch(e){console.warn("Failed to load statistics:",e)}return{gamesPlayed:0,humanWins:0,aiWins:0,draws:0,winRate:0}}recordGameResult(e){const t=this.getStats();switch(t.gamesPlayed++,e){case"human_win":t.humanWins++;break;case"ai_win":t.aiWins++;break;case"draw":t.draws++;break}t.winRate=t.humanWins/t.gamesPlayed*100,this.saveStats(t)}resetStats(){const e={gamesPlayed:0,humanWins:0,aiWins:0,draws:0,winRate:0};this.saveStats(e)}saveStats(e){try{localStorage.setItem(this.storageKey,JSON.stringify(e))}catch(t){console.warn("Failed to save statistics:",t)}}}let i,g;function I(){const n=K(),e=Math.random()<.5?"X":"O";i=new C(void 0,e,void 0,void 0,T.HUMAN_VS_AI,n),p(),Z(),j(),A(),c.forEach(t=>{t.classList.remove("ai-move","ai-last-move")}),i.isAITurn&&setTimeout(()=>{P()},500)}function K(){const n=document.querySelector('input[name="player-side"]:checked');return n?.value||"X"}function _(){const n=g.getStats();R.textContent=n.gamesPlayed.toString(),D.textContent=n.humanWins.toString(),F.textContent=n.aiWins.toString(),$.textContent=n.draws.toString(),q.textContent=`${n.winRate.toFixed(1)}%`}function U(){if(i.gameStatus==="won"){const n=i.winner,e=i.humanPlayerSide;n===e?g.recordGameResult("human_win"):g.recordGameResult("ai_win")}else i.gameStatus==="draw"&&g.recordGameResult("draw");_()}function V(){d.classList.add("board-thinking"),O.classList.remove("hidden"),d.setAttribute("aria-busy","true"),d.setAttribute("aria-live","polite"),d.setAttribute("aria-label","AI is thinking about its next move")}function A(){d.classList.remove("board-thinking"),O.classList.add("hidden"),d.removeAttribute("aria-busy"),d.setAttribute("aria-label","Tic Tac Toe board")}function J(n,e){c.forEach(s=>{s.classList.remove("ai-move","ai-last-move")});const t=n*3+e,a=c[t];a.classList.add("ai-move"),setTimeout(()=>{a.classList.remove("ai-move"),a.classList.add("ai-last-move")},1200)}async function P(){if(!i.isAITurn||i.gameStatus!=="ongoing")return;V(),p();const n=200+Math.random()*300;await new Promise(e=>setTimeout(e,n));try{const e=i.getBestMove();i=i.makeAIMove(),A(),p(),J(e.row,e.col);const t=e.row*3+e.col+1,s=`AI played ${i.humanPlayerSide==="X"?"O":"X"} in cell ${t}`,r=document.createElement("div");r.setAttribute("aria-live","assertive"),r.setAttribute("aria-atomic","true"),r.className="sr-only",r.textContent=s,document.body.appendChild(r),setTimeout(()=>{document.body.removeChild(r)},1e3),i.isAITurn&&i.gameStatus==="ongoing"&&setTimeout(()=>P(),300)}catch(e){console.error("Error making AI move:",e),A()}}function p(){const n=i.currentPlayer;M.textContent=n,M.className=n==="X"?"":"player-o";const e=i.board;c.forEach((t,a)=>{const s=Math.floor(a/3),r=a%3,o=e[s][r];t.textContent=o||"",t.className="cell",o==="X"?t.classList.add("x"):o==="O"&&t.classList.add("o"),t.disabled=o!==null}),Y()}function Y(){const n=i.gameStatus,e=i.currentPlayer,t=i.isAITurn,a=i.humanPlayerSide;switch(n){case"ongoing":t?v.textContent="Ход компьютера...":v.textContent=`Your turn (${e}) - Click any empty cell to make your move`;break;case"won":const s=i.winner;s===a?v.textContent="Congratulations! You won! 🎉":v.textContent="Computer wins! Better luck next time.",L(n,s);break;case"draw":v.textContent="It's a draw! Good game!",L(n,null);break}}function L(n,e){W.classList.remove("hidden"),n==="won"&&e?(b.textContent="Game Over!",S.textContent=`Player ${e} wins! 🎉`,S.className=`winner-${e.toLowerCase()}`,z()):n==="draw"&&(b.textContent="Game Over!",S.textContent="It's a draw! 🤝",S.className="draw"),U(),ee()}function j(){W.classList.add("hidden"),S.className=""}function z(){const n=i.board,e=i.winner;if(!e)return;const t=[[[0,0],[0,1],[0,2]],[[1,0],[1,1],[1,2]],[[2,0],[2,1],[2,2]],[[0,0],[1,0],[2,0]],[[0,1],[1,1],[2,1]],[[0,2],[1,2],[2,2]],[[0,0],[1,1],[2,2]],[[0,2],[1,1],[2,0]]];for(const a of t)if(a.every(([r,o])=>n[r][o]===e)){a.forEach(([r,o])=>{const l=r*3+o;c[l].classList.add("winning")});break}}function Q(n){const e=n.target,t=parseInt(e.dataset.row||"0"),a=parseInt(e.dataset.col||"0");try{if(i.isAITurn)return;i=i.makeMove(t,a),p(),e.style.transform="scale(0.95)",setTimeout(()=>{e.style.transform=""},100),i.gameStatus==="ongoing"&&i.isAITurn&&setTimeout(()=>{P()},300)}catch(s){console.warn("Invalid move:",s),e.style.backgroundColor="#fed7d7",setTimeout(()=>{e.style.backgroundColor=""},200)}}function Z(){c.forEach(n=>{n.textContent||(n.disabled=!1)})}function ee(){c.forEach(n=>{n.disabled=!0})}function te(n){(n.key==="Enter"||n.key===" ")&&(n.preventDefault(),n.target.click())}document.addEventListener("DOMContentLoaded",()=>{g=new H,I(),_(),c.forEach(n=>{n.addEventListener("click",Q),n.addEventListener("keydown",te)}),x.addEventListener("click",I),x.addEventListener("keydown",n=>{(n.key==="Enter"||n.key===" ")&&(n.preventDefault(),I())}),G.forEach(n=>{n.addEventListener("change",I)}),X.addEventListener("click",()=>{confirm("Are you sure you want to reset all statistics?")&&(g.resetStats(),_())}),d.addEventListener("keydown",n=>{const e=document.activeElement,t=Array.from(c).indexOf(e);if(t===-1)return;let a=t;switch(n.key){case"ArrowUp":n.preventDefault(),a=t-3;break;case"ArrowDown":n.preventDefault(),a=t+3;break;case"ArrowLeft":n.preventDefault(),a=t-1;break;case"ArrowRight":n.preventDefault(),a=t+1;break}a>=0&&a<c.length&&c[a].focus()}),c[4].focus()});
