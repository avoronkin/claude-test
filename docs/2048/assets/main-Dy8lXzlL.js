(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();var A=Object.defineProperty,j=Object.defineProperties,N=Object.getOwnPropertyDescriptors,_=Object.getOwnPropertySymbols,R=Object.prototype.hasOwnProperty,B=Object.prototype.propertyIsEnumerable,b=(o,e,t)=>e in o?A(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,m=(o,e)=>{for(var t in e||(e={}))R.call(e,t)&&b(o,t,e[t]);if(_)for(var t of _(e))B.call(e,t)&&b(o,t,e[t]);return o},v=(o,e)=>j(o,N(e));class M extends Error{constructor(e){super(e),this.name="Game2048Error"}}class f extends M{constructor(e){super(e),this.name="InvalidMoveError"}}class k extends M{constructor(e){super(e),this.name="UndoNotAvailableError"}}class g{constructor(e,t=[]){if(this._history=[...t],e)this._state=e;else{const n=Date.now(),r={grid:Array(4).fill(null).map(()=>Array(4).fill(0)),score:0,moves:0,timeElapsed:0,status:"playing",startTime:n,canUndo:!1};this._state=this.addRandomTiles(r,2)}}get state(){return m({},this._state)}get canUndo(){return this._history.length>0}undo(){if(!this.canUndo||this._history.length===0)throw new k("No moves available to undo");const e=this._history[this._history.length-1],t=this._history.slice(0,-1);return Object.freeze({grid:e.grid,score:e.score,moves:e.moves,timeElapsed:e.timeElapsed,status:e.status,startTime:e.startTime,canUndo:t.length>0})}addRandomTiles(e,t){if(t===0)return e;const n=[];for(let i=0;i<4;i++)for(let l=0;l<4;l++)e.grid[i][l]===0&&n.push({row:i,col:l});if(n.length===0)return e;const s=e.grid.map(i=>[...i]),r=Math.min(t,n.length);for(let i=0;i<r;i++){const l=Math.floor(Math.random()*n.length),c=n[l];n.splice(l,1);const T=Math.random()<.9?2:4;s[c.row][c.col]=T}return v(m({},e),{grid:s.map(i=>Object.freeze([...i]))})}move(e){if(this.validateDirection(e),this._state.status==="won"||this._state.status==="lost")return{gameState:this._state,moved:!1,pointsScored:0};const{newGrid:t,pointsScored:n}=this.moveInDirection(this._state.grid,e);if(!!this.gridsEqual(this._state.grid,t))return{gameState:this._state,moved:!1,pointsScored:0};const r=this.addRandomTiles(v(m({},this._state),{grid:t}),1).grid,i=[...this._history,this._state];return{gameState:v(m({},this._state),{grid:r,score:this._state.score+n,moves:this._state.moves+1,timeElapsed:Date.now()-this._state.startTime,status:this.determineGameStatus(r),canUndo:i.length>0}),moved:!0,pointsScored:n}}moveInDirection(e,t){switch(t){case"left":return this.moveLeft(e);case"right":{const n=this.rotateRight(this.rotateRight(e)),{newGrid:s,pointsScored:r}=this.moveLeft(n);return{newGrid:this.rotateRight(this.rotateRight(s)),pointsScored:r}}case"up":{const n=this.transpose(e),{newGrid:s,pointsScored:r}=this.moveLeft(n);return{newGrid:this.transpose(s),pointsScored:r}}case"down":{const n=this.transpose(e),s=this.rotateRight(this.rotateRight(n)),{newGrid:r,pointsScored:i}=this.moveLeft(s),l=this.rotateRight(this.rotateRight(r));return{newGrid:this.transpose(l),pointsScored:i}}default:throw new f(`Invalid direction: ${t}`)}}moveLeft(e){const t=e.map(s=>[...s]);let n=0;for(let s=0;s<4;s++){const r=t[s].filter(c=>c!==0),i=[];let l=0;for(;l<r.length;)if(l<r.length-1&&r[l]===r[l+1]){const c=r[l]*2;i.push(c),n+=c,l+=2}else i.push(r[l]),l+=1;for(;i.length<4;)i.push(0);t[s]=i}return{newGrid:t.map(s=>Object.freeze([...s])),pointsScored:n}}rotateRight(e){const t=Array(4).fill(null).map(()=>Array(4).fill(0));for(let n=0;n<4;n++)for(let s=0;s<4;s++)t[s][3-n]=e[n][s];return t.map(n=>Object.freeze([...n]))}transpose(e){const t=Array(4).fill(null).map(()=>Array(4).fill(0));for(let n=0;n<4;n++)for(let s=0;s<4;s++)t[s][n]=e[n][s];return t.map(n=>Object.freeze([...n]))}gridsEqual(e,t){for(let n=0;n<4;n++)for(let s=0;s<4;s++)if(e[n][s]!==t[n][s])return!1;return!0}validateDirection(e){if(!e||typeof e!="string")throw new f("Invalid direction: direction must be a non-empty string");if(!e.trim())throw new f("Invalid direction: direction must be a non-empty string");if(!["up","down","left","right"].includes(e))throw new f(`Invalid direction: "${e}". Valid directions are: up, down, left, right`)}determineGameStatus(e){return this.hasWinningTile(e)?"won":this.isGameOver(e)?"lost":"playing"}hasWinningTile(e){for(let t=0;t<4;t++)for(let n=0;n<4;n++)if(e[t][n]===2048)return!0;return!1}isGameOver(e){return this.hasEmptySpaces(e)?!1:!this.hasPossibleMerges(e)}hasEmptySpaces(e){for(let t=0;t<4;t++)for(let n=0;n<4;n++)if(e[t][n]===0)return!0;return!1}hasPossibleMerges(e){for(let t=0;t<4;t++)for(let n=0;n<4;n++){const s=e[t][n];if(n<3&&e[t][n+1]===s||t<3&&e[t+1][n]===s)return!0}return!1}}console.log("🎮 2048 TypeScript Demo loaded");let D;const d=document.getElementById("game-board"),L=document.getElementById("new-game-btn"),h=document.getElementById("undo-btn"),$=document.getElementById("score-display"),x=document.getElementById("moves-display"),C=document.getElementById("time-display"),u=document.getElementById("status-message");let a={isPlaying:!1,gameInstance:new g,lastMoveTime:Date.now(),timeUpdateInterval:null};const z={ArrowUp:"up",ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right"};function p(){D=new g,a.gameInstance=D,a.isPlaying=!0,a.lastMoveTime=Date.now(),I(),E(),O(),U(),console.log("🎲 New 2048 game started")}function I(){const o=a.gameInstance.state;Y(o.grid),$.textContent=o.score.toString(),x.textContent=o.moves.toString(),G(o.timeElapsed)}function Y(o){d.querySelectorAll(".grid-cell").forEach((t,n)=>{const s=Math.floor(n/4),r=n%4,i=o[s][r];t.className="grid-cell",t.textContent="",i>0&&(t.classList.add("tile",`tile-${i}`),t.textContent=i.toString(),t.classList.contains("new-tile")&&t.classList.remove("new-tile"))})}function G(o){const e=Math.floor(o/6e4),t=Math.floor(o%6e4/1e3);C.textContent=`${e.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`}function O(){a.timeUpdateInterval&&clearInterval(a.timeUpdateInterval),a.timeUpdateInterval=window.setInterval(()=>{if(a.isPlaying&&a.gameInstance.state.status==="playing"){const o=a.gameInstance.state;G(o.timeElapsed)}},1e3)}function S(){a.timeUpdateInterval&&(clearInterval(a.timeUpdateInterval),a.timeUpdateInterval=null)}function E(){const o=a.gameInstance.canUndo;h.disabled=!o,h.setAttribute("aria-label",o?"Undo Last Move":"No moves to undo")}function w(o){if(a.isPlaying)try{const e=a.gameInstance.move(o);e.moved?(a.gameInstance=new g(e.gameState,[a.gameInstance.state]),I(),E(),e.gameState.status==="won"?X():e.gameState.status==="lost"&&q(),console.log(`🎯 Move ${o}: +${e.pointsScored} points, Total: ${e.gameState.score}`)):console.log(`❌ Invalid move: ${o}`)}catch(e){console.error("🚨 Move error:",e)}}function y(){if(!(!a.isPlaying||!a.gameInstance.canUndo))try{const o=a.gameInstance.undo();a.gameInstance=new g(o),I(),E(),U(),a.gameInstance.state.status==="playing"&&(a.isPlaying=!0,O()),console.log("↩️ Move undone")}catch(o){console.error("🚨 Undo error:",o)}}function X(){a.isPlaying=!1,S(),P("🎉 You won! You reached 2048!","won"),console.log("🏆 Game won!")}function q(){a.isPlaying=!1,S(),P("💀 Game Over! No more moves available.","lost"),console.log("💀 Game lost!")}function P(o,e){u.textContent=o,u.className=`status-message ${e}`,u.setAttribute("aria-live","assertive")}function U(){u.classList.add("hidden"),u.setAttribute("aria-live","polite")}function V(o){const e=z[o.key];e?(o.preventDefault(),w(e)):o.key==="u"||o.key==="U"?(o.preventDefault(),y()):(o.key==="n"||o.key==="N")&&(o.preventDefault(),p())}function W(){L.addEventListener("click",p),L.addEventListener("keydown",t=>{(t.key==="Enter"||t.key===" ")&&(t.preventDefault(),p())}),h.addEventListener("click",y),h.addEventListener("keydown",t=>{(t.key==="Enter"||t.key===" ")&&(t.preventDefault(),y())}),document.addEventListener("keydown",V),d.addEventListener("click",()=>{d.focus()});let o=0,e=0;d.addEventListener("touchstart",t=>{o=t.touches[0].clientX,e=t.touches[0].clientY},{passive:!0}),d.addEventListener("touchend",t=>{if(!o||!e)return;const n=t.changedTouches[0].clientX,s=t.changedTouches[0].clientY,r=o-n,i=e-s,l=30;Math.abs(r)>Math.abs(i)?Math.abs(r)>l&&w(r>0?"left":"right"):Math.abs(i)>l&&w(i>0?"up":"down"),o=0,e=0},{passive:!0})}document.addEventListener("DOMContentLoaded",()=>{console.log("🚀 Initializing 2048 demo..."),W(),p(),d.focus(),console.log("✅ 2048 demo ready!")});window.addEventListener("beforeunload",()=>{S()});
