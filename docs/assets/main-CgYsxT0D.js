(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const p of r.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&o(p)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}})();class S extends Error{constructor(t){super(t),this.name="RPSError"}}class m extends S{constructor(t){super(t),this.name="InvalidMoveError"}}class b{constructor(){}playTwoPlayer(t,n){const o=this.validateMove(t),s=this.validateMove(n),r=this.determineWinner(o,s);return{player1Move:o,player2Move:s,result:r.result,winner:r.winner,explanation:r.explanation}}playVsComputer(t){const n=this.validateMove(t),o=this.generateComputerMove(),s=this.determineWinnerVsComputer(n,o);return{playerMove:n,computerMove:o,result:s.result,winner:s.winner,explanation:s.explanation}}validateMove(t){if(!t||typeof t!="string")throw new m("Invalid move: input must be a non-empty string");const n=t.toLowerCase().trim();if(!n)throw new m("Invalid move: input must be a non-empty string");if(!["rock","paper","scissors"].includes(n))throw new m(`Invalid move: "${t}" is not a valid move. Valid moves are: rock, paper, scissors`);return n}determineWinner(t,n){if(t===n)return{result:"draw",winner:null,explanation:`Both players chose ${t}`};const o={rock:{beats:"scissors",action:"crushes"},paper:{beats:"rock",action:"covers"},scissors:{beats:"paper",action:"cuts"}};if(o[t].beats===n){const r=o[t].action;return{result:"win",winner:"player1",explanation:`${this.capitalizeMove(t)} ${r} ${n}`}}const s=o[n].action;return{result:"lose",winner:"player2",explanation:`${this.capitalizeMove(n)} ${s} ${t}`}}determineWinnerVsComputer(t,n){if(t===n)return{result:"draw",winner:null,explanation:`Both players chose ${t}`};const o={rock:{beats:"scissors",action:"crushes"},paper:{beats:"rock",action:"covers"},scissors:{beats:"paper",action:"cuts"}};if(o[t].beats===n){const r=o[t].action;return{result:"win",winner:"player",explanation:`${this.capitalizeMove(t)} ${r} ${n}`}}const s=o[n].action;return{result:"lose",winner:"computer",explanation:`${this.capitalizeMove(n)} ${s} ${t}`}}generateComputerMove(){const t=["rock","paper","scissors"],n=Math.floor(Math.random()*t.length);return t[n]}capitalizeMove(t){return t.charAt(0).toUpperCase()+t.slice(1)}}console.log("🎮 TypeScript Demo loaded");let P;const w=document.querySelectorAll(".move-btn"),f=document.getElementById("play-again-btn"),i=document.getElementById("result-area"),a=document.getElementById("initial-message"),c=document.getElementById("result-text"),d=document.getElementById("result-explanation"),y=document.getElementById("player-move-icon"),g=document.getElementById("player-move-text"),v=document.getElementById("computer-move-icon"),h=document.getElementById("computer-move-text"),L={rock:"🪨",paper:"📄",scissors:"✂️"},l={isPlaying:!1,currentResult:null};document.addEventListener("DOMContentLoaded",()=>{console.log("🚀 DOM loaded, initializing TypeScript demo"),B()});function B(){try{console.log("🎯 Creating RockPaperScissors instance"),P=new b,console.log("✅ Game instance created successfully"),z(),T(),console.log("🎧 TypeScript demo initialization complete")}catch(e){console.error("❌ Error initializing game:",e),$(e)}}function z(){console.log("🔗 Setting up event listeners"),w.forEach((e,t)=>{const n=e.dataset.move;console.log(`🎯 Setting up button ${t}: ${n}`),e.addEventListener("click",()=>{l.isPlaying||E(n)}),e.addEventListener("keydown",o=>{(o.key==="Enter"||o.key===" ")&&(o.preventDefault(),l.isPlaying||E(n))})}),f&&(f.addEventListener("click",C),f.addEventListener("keydown",e=>{(e.key==="Enter"||e.key===" ")&&(e.preventDefault(),C())}),console.log("🔄 Play again button listeners added"))}function E(e){try{console.log("🎲 Playing game with move:",e),D(),I(),l.isPlaying=!0,u(),setTimeout(()=>{const t=P.playVsComputer(e);l.currentResult=t,console.log("🎉 Game result:",t),G(t),l.isPlaying=!1,u()},300)}catch(t){console.error("❌ Error playing game:",t),l.isPlaying=!1,u(),$(t)}}function M(e){if(console.log("📊 Displaying game result:",e),a&&a.classList.add("hidden"),i&&i.classList.remove("hidden"),y&&g&&e.playerMove){const t=L[e.playerMove];y.textContent=t,g.textContent=k(e.playerMove)}if(v&&h&&e.computerMove){const t=L[e.computerMove];v.textContent=t,h.textContent=k(e.computerMove)}if(c&&d)switch(c.className="result-text",e.result){case"win":c.textContent="You Win! 🎉",c.classList.add("win"),d.textContent=e.playerMove&&e.computerMove?O(e.playerMove,e.computerMove):"You won this round!";break;case"lose":c.textContent="You Lose 😔",c.classList.add("lose"),d.textContent=e.playerMove&&e.computerMove?A(e.playerMove,e.computerMove):"Computer won this round!";break;case"draw":c.textContent="It's a Draw 🤝",c.classList.add("draw"),d.textContent="Great minds think alike!";break;default:c.textContent="Unknown Result",d.textContent=""}console.log("✅ Display updated successfully")}function G(e){console.log("📊 Displaying game result with animation:",e),i&&i.classList.remove("fade-out","fade-in"),a&&a.classList.remove("fade-in","fade-out"),a&&(a.classList.add("fade-out"),setTimeout(()=>{a.classList.add("hidden")},150)),M(e),setTimeout(()=>{i&&(i.classList.remove("hidden"),i.classList.add("fade-in"))},200)}function C(){console.log("🔄 Resetting game"),i&&i.classList.add("hidden"),a&&a.classList.remove("hidden"),l.currentResult=null,l.isPlaying=!1,x(),I(),u(),console.log("✅ Game reset complete")}function x(){[y,g,v,h,c,d].forEach(t=>{t&&(t.textContent="")}),c&&(c.className="result-text")}function I(){w.forEach(e=>{e.blur(),e.classList.remove("active","selected","pressed"),e.style.transform="",e.style.boxShadow="",e.style.backgroundColor="",e.style.borderColor=""}),console.log("🧹 Button selection cleared")}function D(){console.log("🧽 Clearing previous game result"),i&&(i.classList.add("hidden"),i.classList.add("fade-out")),a&&(a.classList.remove("hidden"),a.classList.add("fade-in")),x(),l.currentResult=null}function u(){w.forEach(e=>{e.disabled=l.isPlaying,l.isPlaying?(e.style.opacity="0.6",e.style.cursor="not-allowed"):(e.style.opacity="1",e.style.cursor="pointer")})}function T(){u(),l.currentResult?M(l.currentResult):(i&&i.classList.add("hidden"),a&&a.classList.remove("hidden"))}function $(e){console.error("🚨 Game Error:",e),i&&i.classList.remove("hidden"),a&&a.classList.add("hidden"),c&&(c.textContent="Oops! Something went wrong",c.className="result-text error"),d&&(d.textContent=e.message||"Please try again"),x(),l.isPlaying=!1,l.currentResult=null,u()}function k(e){return e.charAt(0).toUpperCase()+e.slice(1)}function O(e,t){const n={"rock-scissors":"Rock crushes Scissors","paper-rock":"Paper covers Rock","scissors-paper":"Scissors cuts Paper"},o=`${e}-${t}`;return n[o]||"You won this round!"}function A(e,t){const n={"scissors-rock":"Rock crushes Scissors","rock-paper":"Paper covers Rock","paper-scissors":"Scissors cuts Paper"},o=`${e}-${t}`;return n[o]||"Computer won this round!"}
